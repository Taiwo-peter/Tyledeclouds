name: CI/CD Pipeline

on:
  push:
    branches:
      - tyledecloud-server  # Trigger on pushes to the specified branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

    
      - name: Authenticate with DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}


      - name: Build and Tag Docker Image
        run: |
          docker build -t registry.digitalocean.com/cloudy001/tyledecloud:latest .

      - name: Push Docker Image
        run: |
          docker push registry.digitalocean.com/cloudy001/tyledecloud:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes before deploying

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Ubuntu Droplet
        env:
          HOST: ${{ secrets.DROPLET_IP }}  # Your Droplet's IP address
          USER: ${{ secrets.DROPLET_USER }}  # Your Droplet's SSH username
          PRIVATE_KEY: ${{ secrets.DROPLET_SSH_KEY }}  # Your SSH private key
        run: |
          # Create a private key file
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem  # Secure the private key

          # SSH into the Droplet and deploy the Docker container
          ssh -i private_key.pem $USER@$HOST << 'EOF'
            # Commands to deploy the Docker image
            docker pull registry.digitalocean.com/cloudy001/tyledecloud:latest
            docker stop tylendecloud || true  # Stop the current container if it exists
            docker rm tylendecloud || true     # Remove the current container if it exists
            docker run -d --name tylendecloud registry.digitalocean.com/cloudy001/tyledecloud:latest
          EOF

          # Clean up the private key file
          rm private_key.pem
