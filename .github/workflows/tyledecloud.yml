name: CI/CD Pipeline for DigitalOcean

on:
  push:
    branches:
      - tyledecloud-server  # Trigger on pushes to the specified branch


jobs:
  build:
    name: Build tyldecloudserver_app
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Login to DigitalOcean Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.digitalocean.com
        username: oauth2
        password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Build, tag, and push image to DOCR
      id: build-and-push
      env:
        DOCR_REGISTRY: registry.digitalocean.com/cloudy001
        REPOSITORY: tyldecloudserver_app
      run: |
        echo "$DOCR_REGISTRY/$REPOSITORY:${GITHUB_RUN_NUMBER}"
        docker build -t $DOCR_REGISTRY/$REPOSITORY:${GITHUB_RUN_NUMBER} .
        docker push $DOCR_REGISTRY/$REPOSITORY:${GITHUB_RUN_NUMBER}
        echo "$DOCR_REGISTRY" > docr_registry.txt

    - name: Upload DOCR Registry
      uses: actions/upload-artifact@v3
      with:
        name: docr-registry
        path: docr_registry.txt

  deploy:
    name: Deploy tyldecloudserver to dev
    runs-on: ubuntu-latest
    needs: build
    env:
      REPOSITORY: tyldecloudserver_app
      DIRECTORY: tyledecloud
      COMPOSE: compose.yml

    steps:
    - name: Download DOCR Registry
      uses: actions/download-artifact@v3
      with:
        name: docr-registry
        path: .

    - name: Read DOCR Registry
      run: |
        DOCR_REGISTRY=$(cat docr_registry.txt)
        echo "DOCR_REGISTRY=$DOCR_REGISTRY" >> $GITHUB_ENV

    - name: SSH Login to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: ${{ secrets.DROPLET_USER }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.PORT }}
        envs: GITHUB_TRIGGERING_ACTOR,GITHUB_RUN_NUMBER,DOCR_REGISTRY,REPOSITORY,DIRECTORY,COMPOSE
        script: |
          echo "Environment Variables:"
          echo "GITHUB_TRIGGERING_ACTOR: $GITHUB_TRIGGERING_ACTOR"
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
          echo "DOCR_REGISTRY: $DOCR_REGISTRY"
          echo "REPOSITORY: $REPOSITORY"
          echo "DIRECTORY: $DIRECTORY"
          echo "COMPOSE: $COMPOSE"
          echo "$GITHUB_TRIGGERING_ACTOR - Deployment Initiated - \nPulling build artifact $DOCR_REGISTRY/$REPOSITORY:${GITHUB_RUN_NUMBER}"
          cd $DIRECTORY && yq -y -i '.services.web.image = "${DOCR_REGISTRY}/${REPOSITORY}:${GITHUB_RUN_NUMBER}"' $COMPOSE && \
          docker compose up --build --force-recreate -d
          if [[ $? == 0 ]]; then
            echo "Deployment Successful!!!"
          else
            echo "Error!!!!! Can not recreate service update"
            exit 1
          fi



